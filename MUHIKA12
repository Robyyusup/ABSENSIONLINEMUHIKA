<!DOCTYPE html>
<html lang="id">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Panel Admin Rekap Absensi</title>

    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600&display=swap" rel="stylesheet">

    <style>
        :root {
            --primary-color: #4CAF50; /* Hijau yang lebih menarik */
            --secondary-color: #2196F3; /* Biru */
            --text-color: #333;
            --background-light: #f9fbfb;
            --background-dark: #edf2f7;
            --card-background: #ffffff;
            --shadow-light: rgba(0, 0, 0, 0.05);
            --border-color: #e0e0e0;

            /* Warna Status */
            --status-green: #d4edda;
            --status-yellow: #fff3cd;
            --status-red: #f8d7da;
            --status-text-green: #155724;
            --status-text-yellow: #856404;
            --status-text-red: #721c24;
        }

        body {
            font-family: 'Poppins', Arial, sans-serif;
            max-width: 1200px; /* Lebarkan sedikit agar tabel lebih lega */
            margin: auto;
            padding: 20px;
            background-color: var(--background-light);
            color: var(--text-color);
            line-height: 1.6;
        }

        .container {
            background-color: var(--card-background);
            border-radius: 12px;
            box-shadow: 0 8px 20px var(--shadow-light);
            padding: 30px;
            margin-top: 30px;
            position: relative; /* Untuk shape */
            overflow: hidden; /* Pastikan shape tidak keluar */
        }

        /* Geometric Shapes untuk latar belakang container */
        .shape {
            position: absolute;
            opacity: 0.05;
            z-index: 0;
        }

        .shape.circle-top-left {
            width: 150px;
            height: 150px;
            background-color: var(--primary-color);
            border-radius: 50%;
            top: -75px;
            left: -75px;
        }

        .shape.square-bottom-right {
            width: 100px;
            height: 100px;
            background-color: var(--secondary-color);
            transform: rotate(30deg);
            bottom: -50px;
            right: -50px;
        }

        h2 {
            text-align: center;
            color: var(--primary-color);
            margin-bottom: 15px;
            font-weight: 600;
            font-size: 2em;
        }

        .subtitle {
            text-align: center;
            color: #777;
            margin-bottom: 30px;
            font-size: 0.95em;
        }

        .controls {
            text-align: center;
            margin-bottom: 25px;
        }

        .refresh-btn {
            background-color: var(--secondary-color);
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-size: 1em;
            transition: background-color 0.3s ease, transform 0.2s ease;
            box-shadow: 0 4px 10px rgba(33, 150, 243, 0.2);
        }

        .refresh-btn:hover {
            background-color: #1976D2; /* Darker blue */
            transform: translateY(-2px);
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
            border-radius: 8px; /* Sudut tabel */
            overflow: hidden; /* Penting untuk border-radius pada tabel */
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.08);
        }

        th, td {
            border: 1px solid var(--border-color);
            padding: 12px 15px;
            text-align: left; /* Teks rata kiri untuk keterbacaan */
            font-size: 0.9em;
        }

        th {
            background-color: var(--background-dark);
            color: var(--text-color);
            font-weight: 600;
            text-transform: uppercase;
        }

        tr:nth-child(even) {
            background-color: #f6f8f9; /* Zebra striping */
        }

        tr:hover {
            background-color: #e9f0f4;
            transition: background-color 0.3s ease;
        }

        /* Status cell styling */
        .status-cell {
            font-weight: 600;
            padding: 8px 12px;
            border-radius: 6px;
            display: inline-block; /* Agar background hanya di teks */
            min-width: 80px;
            text-align: center;
        }

        .status-cell.status-hijau {
            background-color: var(--status-green);
            color: var(--status-text-green);
        }
        .status-cell.status-kuning {
            background-color: var(--status-yellow);
            color: var(--status-text-yellow);
        }
        .status-cell.status-merah {
            background-color: var(--status-red);
            color: var(--status-text-red);
        }

        /* Loading state */
        #loadingMessage {
            text-align: center;
            font-style: italic;
            color: #777;
            margin-top: 20px;
        }

        /* Responsive adjustments */
        @media (max-width: 768px) {
            body {
                padding: 15px;
            }
            .container {
                padding: 20px;
            }
            table, thead, tbody, th, td, tr {
                display: block;
            }
            thead tr {
                position: absolute;
                top: -9999px;
                left: -9999px;
            }
            tr {
                border: 1px solid var(--border-color);
                margin-bottom: 15px;
                border-radius: 8px;
            }
            td {
                border: none;
                border-bottom: 1px solid var(--border-color);
                position: relative;
                padding-left: 50%;
                text-align: right;
            }
            td:before {
                position: absolute;
                top: 0;
                left: 6px;
                width: 45%;
                padding-right: 10px;
                white-space: nowrap;
                content: attr(data-label); /* Menggunakan data-label untuk judul kolom */
                font-weight: 600;
                text-align: left;
                color: #555;
            }
            td:last-child {
                border-bottom: 0;
            }
        }
    </style>

    <script src="https://www.gstatic.com/firebasejs/9.22.1/firebase-app-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.22.1/firebase-database-compat.js"></script>
</head>
<body>

    <div class="container">
        <div class="shape circle-top-left"></div>
        <div class="shape square-bottom-right"></div>

        <h2>Panel Admin Rekap Absensi</h2>
        <p class="subtitle">Data kehadiran siswa dan guru diupdate secara realtime.</p>

        <div class="controls">
            <button class="refresh-btn" onclick="loadRekap()">Refresh Data</button>
        </div>

        <p id="loadingMessage">Memuat data...</p>

        <table id="rekapTable">
            <thead>
                <tr>
                    <th>ID User</th>
                    <th>Nama</th>
                    <th>Peran</th>
                    <th>Hadir Minggu Ini</th>
                    <th>Status Mingguan</th>
                    <th>Hadir Bulan Ini</th>
                    <th>Status Bulanan</th>
                </tr>
            </thead>
            <tbody id="rekapBody">
                </tbody>
        </table>
    </div>

    <script>
        // --- Konfigurasi Firebase (Ganti dengan milik Anda) ---
        const firebaseConfig = {
            apiKey: "AIzaSyDrt5MHhs-Wjoye8swLwLb068HC4kme-rg",
            authDomain: "absensionlinemuhika.firebaseapp.com",
            databaseURL: "https://absensionlinemuhika-default-rtdb.firebaseio.com",
            projectId: "absensionlinemuhika",
            storageBucket: "absensionlinemuhika.firebasestorage.app",
            messagingSenderId: "109622927610",
            appId: "1:109622927610:web:0b5a6ab7e5bc3104f4e943",
            measurementId: "G-VYJ320SDRM"
        };
        firebase.initializeApp(firebaseConfig);
        const db = firebase.database();

        // --- Utilitas Tanggal ---
        function startOfWeek(date) {
            const d = new Date(date);
            d.setHours(0, 0, 0, 0);
            const day = d.getDay(); // 0 = Minggu, 1 = Senin, ..., 6 = Sabtu
            // Atur ke Senin (hari 1). Jika hari ini Minggu (0), kurangi 6 hari
            const diff = d.getDate() - day + (day === 0 ? -6 : 1);
            return new Date(d.setDate(diff));
        }

        function startOfMonth(date) {
            const d = new Date(date);
            d.setDate(1);
            d.setHours(0, 0, 0, 0);
            return d;
        }

        // --- Hitung Kehadiran ---
        function countAttendanceInRange(records, start, end) {
            let count = 0;
            // Gunakan Object.values().forEach untuk iterasi lebih modern dan aman
            Object.values(records).forEach(record => {
                const timestamp = new Date(record.waktu).getTime(); // Asumsi 'waktu' adalah ISO string
                if (timestamp >= start.getTime() && timestamp <= end.getTime()) {
                    count++;
                }
            });
            return count;
        }


        // --- Tentukan Status Warna (Hijau/Kuning/Merah) ---
        function getStatusColor(count, type) {
            if (type === 'minggu') {
                if (count >= 5) return 'hijau';
                if (count >= 3) return 'kuning'; // Misalnya, 3-4 kehadiran seminggu itu kuning
                return 'merah';
            } else if (type === 'bulan') {
                if (count >= 20) return 'hijau';
                if (count >= 12) return 'kuning'; // Misalnya, 12-19 kehadiran sebulan itu kuning
                return 'merah';
            }
            return '';
        }

        // --- Muat dan Tampilkan Data ---
        async function loadRekap() {
            const rekapBody = document.getElementById('rekapBody');
            const loadingMessage = document.getElementById('loadingMessage');
            rekapBody.innerHTML = ""; // Bersihkan tabel
            loadingMessage.style.display = 'block'; // Tampilkan pesan loading

            try {
                const snapshot = await db.ref('absensi').once('value');
                const data = snapshot.val();

                if (!data) {
                    rekapBody.innerHTML = "<tr><td colspan='7'>Belum ada data absensi.</td></tr>";
                    loadingMessage.style.display = 'none';
                    return;
                }

                const now = new Date();
                const weekStart = startOfWeek(now);
                const monthStart = startOfMonth(now);

                for (let userId in data) {
                    const userRecords = data[userId];
                    // Temukan record terbaru untuk mendapatkan nama dan peran yang paling update
                    const latestRecordKey = Object.keys(userRecords).sort().pop();
                    const latestRecord = userRecords[latestRecordKey];

                    const nama = latestRecord.nama || userId; // Gunakan ID jika nama tidak ada
                    const role = latestRecord.role || "-";

                    const hadirMinggu = countAttendanceInRange(userRecords, weekStart, now);
                    const hadirBulan = countAttendanceInRange(userRecords, monthStart, now);

                    const statusMinggu = getStatusColor(hadirMinggu, 'minggu');
                    const statusBulan = getStatusColor(hadirBulan, 'bulan');

                    const tr = document.createElement('tr');
                    tr.innerHTML = `
                        <td data-label="ID User">${userId}</td>
                        <td data-label="Nama">${nama}</td>
                        <td data-label="Peran">${role}</td>
                        <td data-label="Hadir Minggu Ini">${hadirMinggu}</td>
                        <td data-label="Status Mingguan"><span class="status-cell status-${statusMinggu}"></span></td>
                        <td data-label="Hadir Bulan Ini">${hadirBulan}</td>
                        <td data-label="Status Bulanan"><span class="status-cell status-${statusBulan}"></span></td>
                    `;
                    rekapBody.appendChild(tr);
                }
            } catch (error) {
                console.error("Error fetching data:", error);
                rekapBody.innerHTML = `<tr><td colspan='7'>Gagal memuat data: ${error.message}</td></tr>`;
            } finally {
                loadingMessage.style.display = 'none'; // Sembunyikan pesan loading
            }
        }

        // --- Jalankan Saat Halaman Dimuat ---
        window.onload = loadRekap;
    </script>

</body>
</html>
